== Geminabox On Chef

Configures and installs {geminabox}[http://github.com/cwninja/geminabox] via Chef to provide
a private (and optionally secured) gem store.

== Features

* Optional SSL
* Optional user/pass authentication

== Requirements

Currently this cookbook uses a defined set of applications with the
intention to expand coverage of other options (like passenger, thin,
apache, monit, etc). At present, these are supported:

* Nginx
* Unicorn
* Bluepill

== What you get

By default, this cookbook will provide a Geminabox instance available
via http://node_address. It uses a unicorn + nginx pairing with bluepill
monitoring the unicorn processes. It also comes with an upstart configuration.

== Adding extras

=== SSL

To enable SSL, first turn it on:

  override_attributes :geminabox => {:ssl => true}

SSL support will require a key and cert. There are two ways of providing them.

==== Path based SSL

If the node already has an SSL key/cert pair installed, provide the path to
those files:

  override_attributes :geminabox => {:ssl_key => '/path/to/ssl.key', :ssl_cert => '/path/to/ssl.cert'}

==== Data bag based SSL

The SSL key/cert pair can also be enabled via a data bag. By default, the data bag is
geminabox -> ssl, but the id can be modified. To enable data bag usage, we modify
how we enable SSL:

  override_attributes :geminabox => {:ssl => :databag}

If the ID of the data bag is something other than 'ssl', you can modify:

  override_attributes :geminabox => {:ssl_databag_id => 'node1_ssl'}

This is generally only useful if you have multiple nodes that require different
SSL key/cert pairs.

==== Encrypted data bags

For encrypted data bags, the secret must be supplied. The value can be either
the secret string, or a path to the secret file on the node:

  override_attributes :geminabox => {:ssl_databag_secret => 'my voice is my password'}
  # OR
  override_attributes :geminabox => {:ssl_databag_secret => '/path/to/secret.file'}

==== Data bag format

  {
    id : 'ssl',
    key : 'ssl key here',
    cert: 'ssl cert here'
  }

=== Authentication

To enable authentication, first turn it on:

  override_attributes :geminabox => {:auth_required => true}

Authentication requires password file created by htpasswd. There are two ways
of providing it.

==== Path based auth

If the node already has the password file to use for authentication, provide the path:

  override_attributes :geminabox => {:auth_required => '/path/to/auth.file'}

==== Defined user/password

For a very simple setup, you can provide a username and password and allow the 
password file to be automatically created:

  override_attributes :geminabox => {:auth_username => 'test', :auth_password => 'test'}

==== Data bag

Finally, the password file can be provided via data bag.  There are two ways the data bag can
be formatted. First is providing the content of an htpasswd generated file. The second is to
provide username/password pairs in the data bag.

Format of the data bag for providing the file contents:

  {
    file : 'contents of file'
  }

Format of data bag for username/password pairs:

  {
    users : {
      username1 : 'password1'
      username2 : 'password2'
    }
  }

==== Encrypted data bags

Just as with the SSL data bag, the auth data bag can be encrypted as well. Simply provide
the secret or path to the secret file

  override_attributes :geminabox => {:auth_databag_secret => 'my_secret'}
  # OR
  override_attributes :geminabox => {:auth_databag_secret => '/path/to/secret.file'}

==== Data bag naming

The name of the data bag can also be overriden:

  override_attributes :geminabox => {:auth_databag_id => 'host1_auth'}

== Issues

Please report any bugs to the {issues}[http://github.com/chrisroberts/cookbook-geminabox] section on the github repo.
If you have fixes, updates or new features, please fork and send a pull request

== Thanks

Many thanks to {Tom Lea}[http://github.com/cwninja] for {Geminabox}[http://github.com/cwninja/geminabox]

== License

MIT License (see LICENSE)
